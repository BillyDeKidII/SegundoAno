#BlueJ class context
comment0.params=
comment0.target=GrafoAdjacencias()
comment0.text=\r\n\ Construtor\ da\ classe\ GrafoAdjacencias\ para\ inicializa\u00E7\u00E3o\ das\ cole\u00E7\u00F5es\r\n
comment1.params=
comment1.target=java.util.List\ vertices()
comment1.text=\r\n\ Nesse\ m\u00E9todo\ retornamos\ uma\ cole\u00E7\u00E3o\ de\ vertices\r\n\ \r\n\ @return\ vertices,\ Lista\ cont\u00E9ndo\ os\ v\u00E9rtices\ guardados.\r\n
comment10.params=v\ w\ x
comment10.target=Aresta\ inserirAresta(Vertice,\ Vertice,\ java.lang.Object)
comment10.text=\r\n\ No\ m\u00E9todo\ inserirAresta\ tem\ como\ objetivo\ inserir\ uma\ aresta\ no\ grafo,\ no\ m\u00E9todo\ \r\n\ recebemos\ por\ par\u00E2metro\ dois\ v\u00E9rtices\ e\ um\ atributo\ (o\ peso)\ para\ serem\ inseridos\ \r\n\ a\ lista\ de\ adjacencias\ do\ grafo.\r\n\ \r\n\ @param\ v,\ Refer\u00EAncia\ do\ v\u00E9rtice\ atual\ da\ aresta.\r\n\ @param\ w,\ Refer\u00EAncia\ do\ v\u00E9rtice\ a\ ser\ conectado\ o\ destino\ da\ aresta.\r\n\ @param\ x,\ Atributo\ da\ aresta\ ou\ peso.\r\n\ \r\n\ @return\ ins,\ retorna\ a\ aresta\ inserida.\r\n
comment11.params=v
comment11.target=java.lang.Object\ removerVertice(Vertice)
comment11.text=\r\n\ No\ m\u00E9todo\ removerVertice\ recebe\ com\ argumento\ um\ v\u00E9rtice\ de\ refer\u00EAncia\ para\ ser\ removido\r\n\ da\ lista\ de\ v\u00E9rtices\ do\ grafo,\ para\ isso\ ha\ de\ criar\ uma\ nova\ lista\ auxiliar\ e\ percorremos\r\n\ \r\n\ @param\ v,\ V\u00E9rtice\ para\ remover\r\n\ \r\n\ @return\ atributos,\ retorna\ o\ atributo\ (o\ nome)\ do\ v\u00E9rtice\ removido.\r\n
comment12.params=e
comment12.target=java.lang.Object\ removerAresta(Aresta)
comment12.text=\r\n\ No\ m\u00E9todo\ removerAresta\ recebemos\ como\ argumento\ uma\ aresta\ para\ ser\ removida,\r\n\ nela\ ent\u00E3o\ restauramos\ os\ valores\ para\ nulo\ e\ logo\ em\ seguida\ removemos\ da\ lista\r\n\ de\ adjac\u00EAncias\ (que\ guarda\ as\ arestas).\r\n\ \r\n\ @param\ e,\ Aresta\ para\ ser\ removida.\r\n\ \r\n\ @return\ atributo,\ retorna\ o\ atributo\ (o\ peso)\ da\ aresta\ removida.\r\n
comment2.params=
comment2.target=java.util.List\ arestas()
comment2.text=\r\n\ No\ m\u00E9todo\ arestas\ retornamos\ uma\ lista\ que\ cont\u00E9m\ as\ arestas\ guardadas.\r\n\ \r\n\ @return\ adjacencias,\ Um\ ArrayList\ cont\u00E9ndo\ as\ arestas\r\n
comment3.params=v
comment3.target=java.util.List\ arestasIncidentes(Vertice)
comment3.text=\r\n\ No\ m\u00E9todo\ arestasIncidentes,\ mostra\ uma\ lista\ de\ Arestas\ que\ cont\u00E9m\ todas\ arestas\ \ que\ s\u00E3o\ ligadas\r\n\ umas\ com\ as\ outras\r\n\ \r\n\ @return\ List<Aresta<A>>,\ Lista\ contendo\ as\ arestas\ incidentes\r\n
comment4.params=v\ e
comment4.target=Vertice\ oposto(Vertice,\ Aresta)
comment5.params=e
comment5.target=java.util.List\ verticesFim(Aresta)
comment6.params=v\ w
comment6.target=boolean\ saoAdjacentes(Vertice,\ Vertice)
comment7.params=v\ x
comment7.target=java.lang.Object\ mudarPeso(Vertice,\ java.lang.Object)
comment7.text=\r\n\ No\ m\u00E9todo\ mudarPeso\ recebe\ como\ argumento\ um\ v\u00E9rtice\ e\ um\ novo\ Atributo(o\ nome)\ a\ ser\ inserido\r\n\ no\ v\u00E9rtice.\r\n\ \r\n\ @param\ v,\ Refer\u00EAncia\ para\ o\ v\u00E9rtice.\r\n\ @param\ x,\ Novo\ atributo\ do\ v\u00E9rtice.\r\n\ \r\n\ @return\ atributo,\ Retorna\ o\ novo\ atributo\ do\ v\u00E9rtice.\r\n
comment8.params=e\ x
comment8.target=java.lang.Object\ mudarPeso(Aresta,\ java.lang.Object)
comment8.text=\r\n\ No\ m\u00E9todo\ mudarPeso\ recebe\ como\ argumento\ uma\ aresta\ e\ o\ novo\ atributo(um\ identificador)\ \r\n\ a\ ser\ inserido\ na\ aresta.\r\n\ \r\n\ @param\ e,\ Refer\u00EAncia\ da\ aresta\r\n\ @param\ x,\ Novo\ atributo\ da\ aresta.\r\n\ \r\n\ @return\r\n
comment9.params=x
comment9.target=Vertice\ inserirVertice(java.lang.Object)
comment9.text=\r\n\ No\ m\u00E9todo\ inserirVertice,\ recebe\ como\ argumento\ um\ atributo\ (um\ identificador)\ do\ v\u00E9rtice,\ e\r\n\ cria-se\ um\ novo\ v\u00E9rtice\ passando\ para\ ele\ o\ argumento\ recebido,\ logo\ em\ seguida\ inserimos\ o\ \r\n\ novo\ v\u00E9rtice\ na\ lista\ de\ v\u00E9rtices.\ \ \ \ \r\n\ \r\n\ @param\ x,\ Atributo\ do\ v\u00E9rtice\r\n\ \r\n\ @return\ ins,\ retorna\ o\ v\u00E9rtice\ inserido\r\n\ \r\n
numComments=13
