#BlueJ class context
comment0.target=TabelaTempos
comment0.text=\n\ Write\ a\ description\ of\ class\ TabelaTempos\ here.\n\ \n\ @author\ (your\ name)\ \n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=TabelaTempos()
comment1.text=\n\ Construtor\ da\ classe\n
comment10.params=
comment10.target=int\ maxNumColunas()
comment2.params=legendas
comment2.target=void\ setLegendas(java.lang.String[])
comment2.text=\n\ M\u00E9todo\ que\ define\ as\ legendas\ das\ colunas\ da\ tabela\n\ \n\ @param\ legendas\ Define\ as\ legendas\ das\ colunas.\n
comment3.params=titulo
comment3.target=void\ setTitulo(java.lang.String)
comment3.text=\n\ Define\ um\ t\u00EDtulo\ personalizado\ para\ o\ gr\u00E1fico\n\ \n\ @param\ titulo\ T\u00EDtulo\ desejado.\n
comment4.params=etiquetaX
comment4.target=void\ setEtiquetaX(java.lang.String)
comment4.text=\n\ Define\ uma\ etiqueta\ para\ o\ eixo\ X.\n\ \n\ @param\ etiquetaX\ Nome\ da\ etiqueta.\n
comment5.params=etiquetaY
comment5.target=void\ setEtiquetaY(java.lang.String)
comment5.text=\n\ Define\ uma\ etiqueta\ para\ o\ eixo\ Y.\n\ \n\ @param\ etiquetaY\ Nome\ da\ etiqueta.\n
comment6.params=celulaEixoX\ colunas
comment6.target=void\ anotarAmostra(int,\ double[])
comment6.text=\n\ M\u00E9todo\ que\ registra\ a\ quantidade\ desejada\ de\ amostras\ de\ diversas\ popula\u00E7\u00F5es\ na\ tabela.\n\ \n\ @param\ celulaEixoX\ Valor\ base\ de\ amostras\ no\ eixo\ X.\n\ @param\ colunas\ Valores\ a\ serem\ preenchidos\ na\ linha\ da\ celulaEixoX.\n
comment7.params=
comment7.target=void\ exibirGraficoXY()
comment7.text=\n\ M\u00E9todo\ que\ transforma\ a\ tabela\ de\ anota\u00E7\u00F5es\ em\ um\ gr\u00E1fico\ XY\ e\ exibe\ em\ uma\ janela.\n
comment8.params=separador\ delimitador
comment8.target=java.lang.String\ gerarCSV(char,\ char)
comment8.text=\n\ M\u00E9todo\ que\ gera\ uma\ representa\u00E7\u00E3o\ da\ tabela\ no\ formato\ CSV,\ reconhecido\ por\ diversas\n\ ferramentas\ de\ planilha,\ como\ Excel\ e\ Calc.\n\ \n\ @param\ separador\ Define\ o\ caractere\ utilizado\ para\ separar\ as\ c\u00E9lulas\ de\ uma\ linha\n\ @param\ delimitador\ Define\ o\ caractere\ utilizado\ para\ delimitar\ cada\ c\u00E9lula\n\ \n\ @return\ String\ com\ representa\u00E7\u00E3o\ da\ tabela\ em\ formato\ CSV.\n
comment9.params=
comment9.target=java.lang.String\ gerarCSV()
numComments=11
